La funzione syncObjs prende in ingresso l'array di oggetti e un numero 
facoltativo per stabilire quanti campioni consecutivi interpolare.
Un terzo ingresso booleano serve per dire se si vogliono i grafici delle accelerazioni o no.
L'uscita è costituita dall'oggetto e da una struct MissingPacketsReport che
dice tutto dei pacchetti persi
Lo scopo è quello di preparare il file al post processing. 

Innanzitutto, poichè ProgrNum va da 0 a 9999 e poi ricomincia la numerazione, 
lo script riscrive ProgrNum in modo che vada da 0 a Nsamples-1, 
mantenendo i gap relativi a pacchetti persi.
Segue poi il controllo sui pacchetti persi, che restituisce una tabella MissingPacketsReport, che informa su:
- nome sensore
- nome segmento corporeo 
- se ha perso pacchetti
- se ProgrNum inizia con zero, se no il sensore ha perso pacchetti all'inizio
- numero, percentuale e tempo corrispondente di campioni mancanti
- per ogni intervallo mancante, l'ultimo ProgrNum prima della perdita, 
il numero di campioni persi in quell'intervallo e il tempo corrispondente.
Inoltre nella Command Window compare un messaggio se sono stati persi o no pacchetti, 
e un grafico dà un'idea immediata della situazione.

In seguito, per ogni intervallo, si vanno ad aggiungere le righe mancanti, 
prima ponendole tutte a zero, poi inserendo i ProgrNum mancanti, i Vbat e la modalità, 
poi i dati utili. Questi vengono interpolati usando gli estremi noti, 
se il numero di campioni persi per quell'intervallo è < di MaxforInterp,
 mentre vengono posti a nan se > o se c'è solo un sensore. Se MaxforInterp non
viene dato in ingresso, è 0 di default.

Una volta riordinati, i due sensori vengono sincronizzati, 
poichè da un lato è possibile che vengano persi pacchetti all'inizio, 
dall'altro che il tempo che intercorre tra il primo pacchetto relativo al 
primo sensore e quello relativo al secondo sensore sia eccessivo (= maggiore di Ts).
Sfrutto la proprietà StartTime dell'oggetto per capire quando un sensore 
inizia ad inviare pacchetti. Guardo quale ha iniziato più tardi ed elimino 
i primi campioni dell'altro in modo che siano sincronizzati a meno di un Ts. 

Infine, perchè gli ExelData abbiano la stessa lunghezza, tolgo i campioni
in eccesso nelle tabelle più lunghe.

Seguono gli eventuali grafici delle accelerazioni.


