% Evaluation of joint angle from acquisition
clear
close all
clc

%% INIT
cartelleAcquisizioni = {'2018-01-31', '2018-02-01'};
funzioneEval = @projection;

%% GET ACQUISITIONS PATHS
paths = [];
for i = 1:numel(cartelleAcquisizioni)
    [~,tempPaths] = files2cell(fullfile(csd,cartelleAcquisizioni{i}),'.mat');
    paths = [paths; tempPaths];
end

%% EVALUATE ANGLES
homerAngles = cell(size(paths));
thoraxAngles = cell(size(paths));
jointAngles = cell(size(paths));
meanJointAngles = NaN(size(paths));
sdJointAngles = NaN(size(paths));
for i = 1:numel(paths)
    load(paths{i, 1}); % load acquisition
    tempHomerAngles = funzioneEval(obj(1, 1)); % evaluate homer angles
    tempThoraxAngles = funzioneEval(obj(2, 1)); % evaluate thorax angles
    minLength = min([length(tempHomerAngles), length(tempThoraxAngles)]); % get min length (in case of data loss)
    
    jointAngles{i} = tempHomerAngles(1:minLength) + tempThoraxAngles(1:minLength); % evaluate joint angle
    homerAngles{i} = tempHomerAngles; % save in a variable
    thoraxAngles{i} = tempThoraxAngles; % save in a variable
    meanJointAngles(i) = mean(jointAngles{i}); % save mean joint angle
    sdJointAngles(i) = std(jointAngles{i}); % save sd joint angle
end


% %% PLOTTING DATA
% realAngles = [0; 0; 0; 0; 0; 0; 45; 90; 135; 180; 30; 45; 90; 30; 60; 45; 90; 135; 180; 45; 90; 120; 45; 90; 30; 75];
% meanError = abs(meanJointAngles - realAngles);
% rowsSubplot = 4;
% colsSubplot = 7;
% 
% figure
% for i = 1:numel(paths)
%     subplot(rowsSubplot, colsSubplot, i)
%     plot(jointAngles{i})
%     hold on
%     plot(1:numel(jointAngles{i}), ones(1, numel(jointAngles{i}))*realAngles(i))
%     hold off
%     ylim([-180 180])
%     title(['RealAng: ' num2str(realAngles(i)) newline ...
%         'MeanAbsError: ' num2str(meanError(i)) newline ...
%         ' SD: ' num2str(sdJointAngles(i))])
% end
% legend('measured', 'real')

% %% PLOTTing IMAGES
% for i = 1:numel(cartelleAcquisizioni)
%     % load images
%     [~,imPaths] = files2cell(fullfile(csd,cartelleAcquisizioni{i}, 'ImmaginiPosizioniValutate'),'.png');
%     % ERRATO
% end
% 
% figure
% for i = 1:numel(imPaths)
%     % load image
%     [im, map] = imread(imPaths{i}, 'png');
%     
%     % subplot
%     subplot(rowsSubplot, colsSubplot, i)
%     imshow(im)
%     colormap(map)
%     title(['Immagine ' num2str(i)])
% end

%% STATIC INTERVALS SELECTION

% show angles
figure
for i = 1:numel(jointAngles)
    subplot(2,4,i)
    plot(jointAngles{i})
end

% initializig cell array with clean data
jointAnglesNoJump = cell(size(jointAngles));

% removing signal pre/post jump

% 1. CM94_01
[p, inds] = findpeaks(jointAngles{1}, 'MinPeakHeight', 150);

figure
plot(jointAngles{1})
hold on
plot(inds, p, '*');
hold off

jointAnglesNoJump{1} = jointAngles{1}(inds(end-1):inds(end));

figure
plot(jointAnglesNoJump{1})

% 2. CM94_02
[p, inds] = findpeaks(jointAngles{2}, 'MinPeakHeight', 150);

figure
plot(jointAngles{2})
hold on
plot(inds, p, '*');
hold off

jointAnglesNoJump{2} = jointAngles{2}(inds(end-1):inds(end));

figure
plot(jointAnglesNoJump{2})

% 3. FP94_01
[p, inds] = findpeaks(jointAngles{3}, 'MinPeakHeight', 150);

figure
plot(jointAngles{3})
hold on
plot(inds, p, '*');
hold off

jointAnglesNoJump{3} = jointAngles{3}(inds(end-1):inds(end));

figure
plot(jointAnglesNoJump{3})

% 4. FP94_02
[p, inds] = findpeaks(jointAngles{4}, 'MinPeakHeight', 150);

figure
plot(jointAngles{4})
hold on
plot(inds, p, '*');
hold off

jointAnglesNoJump{4} = jointAngles{4}(inds(end-2):inds(end-1));

figure
plot(jointAnglesNoJump{4})

% 5. GL94_01
[p, inds] = findpeaks(jointAngles{7}, 'MinPeakHeight', 150);

figure
plot(jointAngles{7})
hold on
plot(inds, p, '*');
hold off

jointAnglesNoJump{7} = jointAngles{7}(inds(1):inds(end));

figure
plot(jointAnglesNoJump{7})
